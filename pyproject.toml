# pyproject.toml
# Python project configuration.

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "buildarr"
description = "Constructs and configures Arr PVR stacks"
readme = "README.md"
authors = [
    {name = "Callum Dickinson",  email = "callum.dickinson.nz@gmail.com"},
]
license = {text = "GPL-3.0-or-later"}
keywords = [
    "buildarr",
    "sonarr",
    "radarr",
    "prowlarr",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Pydantic",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "aenum",
    "click>=8.0.4",
    "click-params>=0.4.1",
    "importlib-metadata>=4.6.0",
    "pyyaml>=6.0",
    "pydantic[email]>=1.10.0,<2.0.0",
    "requests>=2.28.0",
    "schedule>=1.1.0",
    "stevedore>=4.0.0",
    "typing-extensions>=4.0.1",
    "watchdog>=3.0.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://buildarr.github.io"
Documentation = "https://buildarr.github.io"
Repository = "https://github.com/buildarr/buildarr"
Issues = "https://github.com/buildarr/buildarr/issues"
Changelog = "https://buildarr.github.io/release-notes"

[project.scripts]
buildarr = "buildarr.cli.main:main"

[project.entry-points."buildarr.plugins"]
# Used during unit testing.
dummy = "buildarr.plugins.dummy.plugin:DummyPlugin"
dummy2 = "buildarr.plugins.dummy2.plugin:Dummy2Plugin"

[tool.setuptools]
packages = ["buildarr"]

[tool.setuptools_scm]

[tool.pdm.dev-dependencies]
docs = [
    "mkdocs==1.5.3",
    "mkdocstrings[python]==0.23.0",
]
lint = [
    "mypy==1.7.0",
    "ruff==0.3.0",
    "types-pyyaml==6.0.12.12",
    "types-requests==2.31.0.10",
]
test = [
    "Flask>=3.0.2",
    "pexpect>=4.9.0",
    "pytest>=8.0.2",
    "pytest-cov>=4.1.0",
    "pytest-httpserver>=1.0.10",
    "pytest-mock>=3.12.0",
    "Werkzeug>=3.0.1",
]

[tool.pdm.scripts]
lint = {cmd = "ruff check"}
format = {cmd = "ruff format"}
test = {cmd = "pytest"}
dummy-server = {cmd = "flask --app buildarr.plugins.dummy.server:app run --debug"}

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--color=yes --cov=buildarr --cov-config=pyproject.toml --cov-report=html:cover --cov-report=term --cov-report=xml:coverage.xml --junit-xml=rspec.xml -r A --showlocals --verbosity=3"
filterwarnings = [
    "error",
]
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
disable_warnings = ["no-data-collected"]
omit = [
    "*/buildarr/plugins/dummy/server.py",
]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    'if __name__ == "__main__":',
    "raise NotImplementedError",
]

[tool.ruff]
fix = true
indent-width = 4
line-length = 100
output-format = "grouped"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
    "A",
    "B",
    "BLE",
    "E",
    "F",
    "G",
    "I",
    "INP",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PTH",
    "RUF",
    "S",
    "T10",
    "T20",
    "W",
    "YTT",
]
extend-select = [
    # COM812 is currently disabled due to a conflict with the Ruff formatter.
    # https://github.com/astral-sh/ruff/issues/9216
    # TODO: Decide whether to enable or remove.
    # "COM812",
    "COM818",
    "UP009",
]
extend-ignore = [
    "A003",
    "B023",
    "N805",
    "N806",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "RUF012",
]

[tool.ruff.lint.isort]
lines-between-types = 1
combine-as-imports = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"buildarr/cli/main.py" = ["F401"]
"tests/*" = ["S101"]

[tool.mypy]
python_version = "3.8"
pretty = true
